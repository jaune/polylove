{"version":3,"sources":["webpack:///webpack/bootstrap d9ae390c07e91ef27695","webpack:///./polylove.global.js","webpack:///./polylove.js","webpack:///external \"lf\"","webpack:///./~/polylove-sql-parser/polylove-sql-parser.js","webpack:///./~/lovefield/dist/error_code.json"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA,E;;;;;;ACFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,sCAAsC;AACtE;AACA;AACA,iCAAgC,sCAAsC;AACtE,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAwB,+BAA+B,EAAE;AACzD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,K;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,M;AACA,IAAG;;AAEH;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH,EAAC;AACD;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAoC,eAAe;AACnD;AACA,MAAK,E;;AAEL;AACA;AACA;;;;;;;AC5OA,qB;;;;;;ACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2DAA0D;AAC1D;;AAEA,wBAAuB;;AAEvB,mCAAkC,wBAAwB;AAC1D;;AAEA;AACA,mBAAkB,8DAA8D;AAChF;AACA,mBAAkB,0DAA0D;AAC5E;AACA,mBAAkB,4DAA4D;AAC9E;AACA,mBAAkB,4DAA4D;AAC9E;AACA,mBAAkB,sDAAsD;AACxE,4DAA2D,SAAS,gEAAgE,EAAE;AACtI,mDAAkD,SAAS,2DAA2D,EAAE;AACxH,4CAA2C,SAAS,wDAAwD,EAAE;AAC9G;AACA,oBAAmB,oDAAoD;AACvE,yCAAwC,4BAA4B,EAAE;AACtE,gCAA+B,YAAY,EAAE;AAC7C,sCAAqC,yBAAyB,EAAE;AAChE;AACA,oBAAmB,0DAA0D;AAC7E;AACA,oBAAmB,wDAAwD;AAC3E;AACA,oBAAmB,wDAAwD;AAC3E,mCAAkC,sBAAsB,EAAE;AAC1D;AACA,oBAAmB,sDAAsD;AACzE,mCAAkC,qBAAqB,EAAE;AACzD;AACA,oBAAmB,oDAAoD;AACvE,0CAAyC,2BAA2B,EAAE;AACtE,0CAAyC,2BAA2B,EAAE;AACtE,sBAAqB;AACrB,oBAAmB,4BAA4B,qBAAqB,KAAK;AACzE,sBAAqB;AACrB,oBAAmB,4BAA4B,qBAAqB,KAAK;AACzE,mCAAkC,SAAS,gCAAgC,EAAE;AAC7E;AACA,oBAAmB,oDAAoD;AACvE,mCAAkC,SAAS,gCAAgC,EAAE;AAC7E,oBAAmB,wCAAwC;AAC3D;AACA,oBAAmB,oDAAoD;AACvE,+BAA8B,aAAa;AAC3C;AACA,oBAAmB,sDAAsD;AACzE;AACA,oBAAmB,oDAAoD;AACvE,mCAAkC,eAAe,EAAE;AACnD,0CAAyC,sBAAsB,EAAE;AACjE,mCAAkC,qBAAqB,EAAE;AACzD;AACA,oBAAmB,8DAA8D;AACjF;AACA,oBAAmB,oEAAoE;AACvF,yCAAwC,6BAA6B,EAAE;AACvE;AACA,oBAAmB,oDAAoD;AACvE;AACA,oBAAmB,uDAAuD;AAC1E;AACA,oBAAmB,uDAAuD;AAC1E;AACA,oBAAmB,uDAAuD;AAC1E,oBAAmB,4CAA4C;AAC/D,+BAA8B,aAAa,EAAE;;AAE7C;AACA;AACA,kCAAiC,oCAAoC;AACrE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAU,0CAA0C;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC,gBAAgB;AAClD;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC,QAAQ;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,oDAAoD;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,yBAAyB,EAAE;AAC1F,gEAA+D,yBAAyB,EAAE;AAC1F,gEAA+D,yBAAyB,EAAE;AAC1F,gEAA+D,yBAAyB,EAAE;AAC1F;;AAEA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA,6CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,qDAAoD,kBAAkB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA,6DAA4D,kBAAkB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,iEAAgE,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,+CAA8C,kBAAkB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,uDAAsD,kBAAkB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,iDAAgD,kBAAkB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,kBAAkB;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,qCAAoC,mBAAmB;AACvD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,yCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,2CAA0C,mBAAmB;AAC7D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,mBAAmB;AACvD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,mBAAkB,2CAA2C;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;;;;;;ACh9CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA8D,EAAE;AAChE,iBAAgB,EAAE;AAClB;AACA;AACA,iBAAgB,EAAE;AAClB;AACA;AACA,6BAA4B,EAAE;AAC9B,iDAAgD,EAAE,KAAK,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,EAAE;AACjE,0DAAyD,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,EAAE;AACrD,0CAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,kCAAiC,EAAE;AACnC,gBAAe,EAAE;AACjB;AACA;AACA;AACA,8BAA6B,EAAE,8BAA8B,EAAE;AAC/D,iBAAgB,EAAE,wBAAwB,EAAE;AAC5C,kCAAiC,EAAE,0BAA0B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,EAAE;AACxB;AACA,uBAAsB,EAAE;AACxB,uBAAsB,EAAE;AACxB,uBAAsB,EAAE;AACxB,uBAAsB,EAAE;AACxB,uBAAsB,EAAE;AACxB;AACA;AACA,uBAAsB,EAAE;AACxB,gDAA+C,EAAE;AACjD,8BAA6B,EAAE;AAC/B,mEAAkE,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,G","file":"polylove.global.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d9ae390c07e91ef27695\n **/","if (!window.polylove) {\r\n  window.polylove = require('./polylove.js');\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./polylove.global.js\n ** module id = 0\n ** module chunks = 0\n **/","var lf = require('lovefield');\r\nvar sqlSelectParser = require('polylove-sql-parser');\r\nvar lfDatabase;\r\n\r\nvar lfReadyCallbacks = [];\r\nfunction lfReady(cb) {\r\n  lfReadyCallbacks.push(cb);\r\n}\r\n\r\nfunction lfQueryBuilder (db, options) {\r\n  this.db = db;\r\n  this.alias = {};\r\n  this.options = options;\r\n\r\n  this.propertyBindingIndexies = {};\r\n  this.constants = options.constants;\r\n}\r\n\r\nlfQueryBuilder.prototype.table = function(n) {\r\n  var t;\r\n  if(typeof n == 'string') {\r\n    if (!this.alias[n]) { \r\n      this.alias[n] = this.db.getSchema().table(n);\r\n    }\r\n    return this.alias[n];\r\n  }\r\n\r\n  if (Array.isArray(n)) {\r\n    if (!this.alias[n[1]]) {\r\n      this.alias[n[1]] = this.db.getSchema().table(n[0]);\r\n    }\r\n    return this.alias[n[1]];\r\n  }\r\n\r\n  throw 'Invalid table name';      \r\n};\r\n\r\nlfQueryBuilder.prototype.build = function() {\r\n  var q, db = this.db;\r\n\r\n  var queryObject = this.options.query;\r\n\r\n  var tables = {};\r\n\r\n  // SELECT\r\n  if (queryObject.columns.length === 1 && queryObject.columns[0] === '*'){\r\n    q = db.select();\r\n  } else {\r\n    throw 'TODO';\r\n  }\r\n\r\n  // FROM\r\n  var fromArguments = []\r\n  queryObject.from.forEach(function (from) {\r\n    fromArguments.push(this.table(from))\r\n  }, this);\r\n  q.from.apply(q, fromArguments);\r\n\r\n  // WHERE\r\n  if (Array.isArray(queryObject.where)) {\r\n    q.where(this.buildWhere(queryObject.where));\r\n  }\r\n\r\n  // ORDER BY\r\n  if (Array.isArray(queryObject.orderBy)) {\r\n    queryObject.orderBy.forEach(function (o) {\r\n      var d;\r\n\r\n      if (o[2] == 'DESC') {\r\n        d = lf.Order.DESC;\r\n      } else if (o[2] == 'ASC') {\r\n        d = lf.Order.ASC;\r\n      }\r\n      q.orderBy(this.table(o[0])[o[1]], d);\r\n    }, this);\r\n  }\r\n  return q;\r\n};\r\n\r\nlfQueryBuilder.prototype.bind = function (value) {\r\n  if (value.type == 'property') {\r\n    if (!this.propertyBindingIndexies[value.name]) {\r\n      this.propertyBindingIndexies[value.name] = Object.keys(this.propertyBindingIndexies).length;\r\n    }\r\n    return this.propertyBindingIndexies[value.name];\r\n    \r\n  }\r\n  throw 'TODO';\r\n};\r\n\r\nlfQueryBuilder.prototype.buildWhere = function (w) {\r\n  var me = this;\r\n\r\n  switch(w[0]) {\r\n    // A = B\r\n    case '=': return (function () {\r\n      var a, b;\r\n\r\n      a = me.table(w[1][0])[w[1][1]];\r\n      // ['=', ['table', 'a'], {type: 'property', name: 'b', index: 0}]\r\n      if (w[2].type === 'property') {\r\n        b = lf.bind(me.bind(w[2]));\r\n      // ['=', ['table', 'a'], {type: 'constant', name: 'b', index: 0}]\r\n      } else if (w[2].type === 'constant') {\r\n        b = this.constants[w[2].name];\r\n      } else {\r\n        throw 'Error';\r\n      }\r\n      \r\n      return a.eq(b);\r\n    })();\r\n  }\r\n};\r\n\r\nfunction lfBuildQuery(db, options) {\r\n  return (new lfQueryBuilder(db, options)).build();\r\n}\r\n\r\nfunction lfParseSQLSelect(queryString, constants) {\r\n  return function (db) { return lfBuildQuery(db, this); }.bind({\r\n    constants: constants,\r\n    query: sqlSelectParser.parse(queryString)\r\n  });\r\n}\r\n\r\nfunction lfBehaviorBuilder() {\r\n  this.behavior = {\r\n    observers: [],\r\n    properties: {}\r\n  };\r\n}\r\n\r\nlfBehaviorBuilder.prototype.push = function(propertyName, queryString, constants) {\r\n  constants = constants || {};\r\n\r\n  var query = null;\r\n  var queue = [];\r\n  var createQuery = lfParseSQLSelect(queryString, constants);\r\n\r\n  this.behavior.properties[propertyName] = {\r\n    type: Array,\r\n    value: [],\r\n    notify: true\r\n  };\r\n\r\n  this.behavior.observers.push('_'+propertyName+'Observer(year)');\r\n\r\n  lfReady(function (db) {\r\n\r\n    query = createQuery(db)\r\n    \r\n    var task;\r\n    while (task = queue.shift()){\r\n      runQuery.apply(null, task);\r\n    }\r\n  });\r\n\r\n  function runQuery(el, binds) {\r\n    if (!query) {\r\n      queue.push([el, binds]);\r\n      return;\r\n    }\r\n    query.bind(binds).exec().then(function (rows) {\r\n      el.notifyPath(propertyName, rows);\r\n    });\r\n  }\r\n\r\n  this.behavior['_'+propertyName+'Observer'] = function (year) {\r\n    runQuery(this, [year]);\r\n  }; \r\n};\r\n\r\n\r\nfunction lfBehavior(options) {\r\n  var builder = new lfBehaviorBuilder();\r\n\r\n  Object.keys(options).forEach(function (propertyName) {\r\n    if (typeof options[propertyName] == 'string') {\r\n      builder.push(propertyName, options[propertyName]);\r\n    } else {\r\n      builder.push(propertyName, options[propertyName].query, options[propertyName].constants);\r\n    }    \r\n  });\r\n\r\n  return builder.behavior;\r\n}\r\n\r\n\r\n/*\r\n(function (db) {\r\n  var t = db.getSchema().table('Movie');\r\n\r\n  var rows = [];\r\n\r\n  rows.push(t.createRow({\r\n    'id': 666,\r\n    'title': 'Diablo',\r\n    'year': 2014,\r\n  }));\r\n  db.insertOrReplace().into(t).values(rows).exec().then(function () {\r\n    console.log('DONE !');\r\n  });\r\n\r\n})(lfDatabase);\r\n*/\r\n\r\nfunction lfConnect (schemaBuilder) {\r\n  return schemaBuilder.connect()\r\n  .then(function (database) {\r\n    return lfDatabase = database;\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  lf: lf,\r\n  ready: function (db) {\r\n    lfReadyCallbacks.forEach(function (cb) {\r\n      cb.call(null, db);\r\n    });\r\n  },\r\n  connect: lfConnect,\r\n  behavior: lfBehavior,\r\n  getErrorMessage: function (error) {\r\n    var error_code = require('json!./node_modules/lovefield/dist/error_code.json');\r\n    var parts = url.parse(error.message, true);\r\n    var message = error_code[error.code];\r\n\r\n    Object.keys(parts.query).forEach(function (param) {\r\n      var matches = param.match(/([0-9]+)$/);\r\n      if (matches) {\r\n        message = message.replace('{'+matches[1]+'}', parts.query[param]);\r\n      }\r\n    }); \r\n\r\n    return error.code+': '+message;\r\n  }\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./polylove.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = lf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lf\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = (function() {\r\n  \"use strict\";\r\n\r\n  /*\r\n   * Generated by PEG.js 0.9.0.\r\n   *\r\n   * http://pegjs.org/\r\n   */\r\n\r\n  function peg$subclass(child, parent) {\r\n    function ctor() { this.constructor = child; }\r\n    ctor.prototype = parent.prototype;\r\n    child.prototype = new ctor();\r\n  }\r\n\r\n  function peg$SyntaxError(message, expected, found, location) {\r\n    this.message  = message;\r\n    this.expected = expected;\r\n    this.found    = found;\r\n    this.location = location;\r\n    this.name     = \"SyntaxError\";\r\n\r\n    if (typeof Error.captureStackTrace === \"function\") {\r\n      Error.captureStackTrace(this, peg$SyntaxError);\r\n    }\r\n  }\r\n\r\n  peg$subclass(peg$SyntaxError, Error);\r\n\r\n  function peg$parse(input) {\r\n    var options = arguments.length > 1 ? arguments[1] : {},\r\n        parser  = this,\r\n\r\n        peg$FAILED = {},\r\n\r\n        peg$startRuleFunctions = { Start: peg$parseStart },\r\n        peg$startRuleFunction  = peg$parseStart,\r\n\r\n        peg$c0 = \"SELECT\",\r\n        peg$c1 = { type: \"literal\", value: \"SELECT\", description: \"\\\"SELECT\\\"\" },\r\n        peg$c2 = \"FROM\",\r\n        peg$c3 = { type: \"literal\", value: \"FROM\", description: \"\\\"FROM\\\"\" },\r\n        peg$c4 = \"WHERE\",\r\n        peg$c5 = { type: \"literal\", value: \"WHERE\", description: \"\\\"WHERE\\\"\" },\r\n        peg$c6 = \"ORDER\",\r\n        peg$c7 = { type: \"literal\", value: \"ORDER\", description: \"\\\"ORDER\\\"\" },\r\n        peg$c8 = \"BY\",\r\n        peg$c9 = { type: \"literal\", value: \"BY\", description: \"\\\"BY\\\"\" },\r\n        peg$c10 = function(columns, from, where, orderBy) { return { columns: columns, from: from, where: where, orderBy: orderBy }; },\r\n        peg$c11 = function(columns, from, where) { return { columns: columns, from: from, where: where, orderBy: [] }; },\r\n        peg$c12 = function(columns, from) { return { columns: columns, from: from, where: [], orderBy: [] }; },\r\n        peg$c13 = \",\",\r\n        peg$c14 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\r\n        peg$c15 = function(begin, end) { return [begin].concat(end); },\r\n        peg$c16 = function(e) { return [e]; },\r\n        peg$c17 = function(name, d) { return name.concat([d]); },\r\n        peg$c18 = \"DESC\",\r\n        peg$c19 = { type: \"literal\", value: \"DESC\", description: \"\\\"DESC\\\"\" },\r\n        peg$c20 = \"ASC\",\r\n        peg$c21 = { type: \"literal\", value: \"ASC\", description: \"\\\"ASC\\\"\" },\r\n        peg$c22 = \"AND\",\r\n        peg$c23 = { type: \"literal\", value: \"AND\", description: \"\\\"AND\\\"\" },\r\n        peg$c24 = function(a, b) { return ['and', a, b]; },\r\n        peg$c25 = \"OR\",\r\n        peg$c26 = { type: \"literal\", value: \"OR\", description: \"\\\"OR\\\"\" },\r\n        peg$c27 = function(a, b) { return ['or', a, b]; },\r\n        peg$c28 = \"=\",\r\n        peg$c29 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\r\n        peg$c30 = function(name, value) { return ['=', name, value]; },\r\n        peg$c31 = function(value, name) { return ['=', name, value]; },\r\n        peg$c32 = \"{{\",\r\n        peg$c33 = { type: \"literal\", value: \"{{\", description: \"\\\"{{\\\"\" },\r\n        peg$c34 = \"}}\",\r\n        peg$c35 = { type: \"literal\", value: \"}}\", description: \"\\\"}}\\\"\" },\r\n        peg$c36 = function(name) { return { type: 'property', name: name }; },\r\n        peg$c37 = \":\",\r\n        peg$c38 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\r\n        peg$c39 = function(name) { return { type: 'constant', name: name }; },\r\n        peg$c40 = { type: \"other\", description: \"columns\" },\r\n        peg$c41 = \"*\",\r\n        peg$c42 = { type: \"literal\", value: \"*\", description: \"\\\"*\\\"\" },\r\n        peg$c43 = function() {return ['*']},\r\n        peg$c44 = \"AS\",\r\n        peg$c45 = { type: \"literal\", value: \"AS\", description: \"\\\"AS\\\"\" },\r\n        peg$c46 = \".\",\r\n        peg$c47 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\r\n        peg$c48 = function(name) { return [name]; },\r\n        peg$c49 = function(name, alias) { return [name, alias]; },\r\n        peg$c50 = function(name) { return [name, name]; },\r\n        peg$c51 = /^[a-zA-z_]/,\r\n        peg$c52 = { type: \"class\", value: \"[a-zA-z_]\", description: \"[a-zA-z_]\" },\r\n        peg$c53 = /^[a-zA-Z0-9_]/,\r\n        peg$c54 = { type: \"class\", value: \"[a-zA-Z0-9_]\", description: \"[a-zA-Z0-9_]\" },\r\n        peg$c55 = function(begin, end) { return begin + end.join(''); },\r\n        peg$c56 = \" \",\r\n        peg$c57 = { type: \"literal\", value: \" \", description: \"\\\" \\\"\" },\r\n        peg$c58 = \"\\n\",\r\n        peg$c59 = { type: \"literal\", value: \"\\n\", description: \"\\\"\\\\n\\\"\" },\r\n        peg$c60 = \"\\r\",\r\n        peg$c61 = { type: \"literal\", value: \"\\r\", description: \"\\\"\\\\r\\\"\" },\r\n        peg$c62 = \"\\t\",\r\n        peg$c63 = { type: \"literal\", value: \"\\t\", description: \"\\\"\\\\t\\\"\" },\r\n        peg$c64 = { type: \"other\", description: \"whitespaces\" },\r\n        peg$c65 = function() { return null; },\r\n\r\n        peg$currPos          = 0,\r\n        peg$savedPos         = 0,\r\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\r\n        peg$maxFailPos       = 0,\r\n        peg$maxFailExpected  = [],\r\n        peg$silentFails      = 0,\r\n\r\n        peg$result;\r\n\r\n    if (\"startRule\" in options) {\r\n      if (!(options.startRule in peg$startRuleFunctions)) {\r\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n      }\r\n\r\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n    }\r\n\r\n    function text() {\r\n      return input.substring(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function location() {\r\n      return peg$computeLocation(peg$savedPos, peg$currPos);\r\n    }\r\n\r\n    function expected(description) {\r\n      throw peg$buildException(\r\n        null,\r\n        [{ type: \"other\", description: description }],\r\n        input.substring(peg$savedPos, peg$currPos),\r\n        peg$computeLocation(peg$savedPos, peg$currPos)\r\n      );\r\n    }\r\n\r\n    function error(message) {\r\n      throw peg$buildException(\r\n        message,\r\n        null,\r\n        input.substring(peg$savedPos, peg$currPos),\r\n        peg$computeLocation(peg$savedPos, peg$currPos)\r\n      );\r\n    }\r\n\r\n    function peg$computePosDetails(pos) {\r\n      var details = peg$posDetailsCache[pos],\r\n          p, ch;\r\n\r\n      if (details) {\r\n        return details;\r\n      } else {\r\n        p = pos - 1;\r\n        while (!peg$posDetailsCache[p]) {\r\n          p--;\r\n        }\r\n\r\n        details = peg$posDetailsCache[p];\r\n        details = {\r\n          line:   details.line,\r\n          column: details.column,\r\n          seenCR: details.seenCR\r\n        };\r\n\r\n        while (p < pos) {\r\n          ch = input.charAt(p);\r\n          if (ch === \"\\n\") {\r\n            if (!details.seenCR) { details.line++; }\r\n            details.column = 1;\r\n            details.seenCR = false;\r\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\r\n            details.line++;\r\n            details.column = 1;\r\n            details.seenCR = true;\r\n          } else {\r\n            details.column++;\r\n            details.seenCR = false;\r\n          }\r\n\r\n          p++;\r\n        }\r\n\r\n        peg$posDetailsCache[pos] = details;\r\n        return details;\r\n      }\r\n    }\r\n\r\n    function peg$computeLocation(startPos, endPos) {\r\n      var startPosDetails = peg$computePosDetails(startPos),\r\n          endPosDetails   = peg$computePosDetails(endPos);\r\n\r\n      return {\r\n        start: {\r\n          offset: startPos,\r\n          line:   startPosDetails.line,\r\n          column: startPosDetails.column\r\n        },\r\n        end: {\r\n          offset: endPos,\r\n          line:   endPosDetails.line,\r\n          column: endPosDetails.column\r\n        }\r\n      };\r\n    }\r\n\r\n    function peg$fail(expected) {\r\n      if (peg$currPos < peg$maxFailPos) { return; }\r\n\r\n      if (peg$currPos > peg$maxFailPos) {\r\n        peg$maxFailPos = peg$currPos;\r\n        peg$maxFailExpected = [];\r\n      }\r\n\r\n      peg$maxFailExpected.push(expected);\r\n    }\r\n\r\n    function peg$buildException(message, expected, found, location) {\r\n      function cleanupExpected(expected) {\r\n        var i = 1;\r\n\r\n        expected.sort(function(a, b) {\r\n          if (a.description < b.description) {\r\n            return -1;\r\n          } else if (a.description > b.description) {\r\n            return 1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n\r\n        while (i < expected.length) {\r\n          if (expected[i - 1] === expected[i]) {\r\n            expected.splice(i, 1);\r\n          } else {\r\n            i++;\r\n          }\r\n        }\r\n      }\r\n\r\n      function buildMessage(expected, found) {\r\n        function stringEscape(s) {\r\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\r\n\r\n          return s\r\n            .replace(/\\\\/g,   '\\\\\\\\')\r\n            .replace(/\"/g,    '\\\\\"')\r\n            .replace(/\\x08/g, '\\\\b')\r\n            .replace(/\\t/g,   '\\\\t')\r\n            .replace(/\\n/g,   '\\\\n')\r\n            .replace(/\\f/g,   '\\\\f')\r\n            .replace(/\\r/g,   '\\\\r')\r\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\r\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\r\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\r\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\r\n        }\r\n\r\n        var expectedDescs = new Array(expected.length),\r\n            expectedDesc, foundDesc, i;\r\n\r\n        for (i = 0; i < expected.length; i++) {\r\n          expectedDescs[i] = expected[i].description;\r\n        }\r\n\r\n        expectedDesc = expected.length > 1\r\n          ? expectedDescs.slice(0, -1).join(\", \")\r\n              + \" or \"\r\n              + expectedDescs[expected.length - 1]\r\n          : expectedDescs[0];\r\n\r\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\r\n\r\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\r\n      }\r\n\r\n      if (expected !== null) {\r\n        cleanupExpected(expected);\r\n      }\r\n\r\n      return new peg$SyntaxError(\r\n        message !== null ? message : buildMessage(expected, found),\r\n        expected,\r\n        found,\r\n        location\r\n      );\r\n    }\r\n\r\n    function peg$parseStart() {\r\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 6) === peg$c0) {\r\n        s1 = peg$c0;\r\n        peg$currPos += 6;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c1); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parseColumns();\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 !== peg$FAILED) {\r\n              if (input.substr(peg$currPos, 4) === peg$c2) {\r\n                s5 = peg$c2;\r\n                peg$currPos += 4;\r\n              } else {\r\n                s5 = peg$FAILED;\r\n                if (peg$silentFails === 0) { peg$fail(peg$c3); }\r\n              }\r\n              if (s5 !== peg$FAILED) {\r\n                s6 = peg$parse_();\r\n                if (s6 !== peg$FAILED) {\r\n                  s7 = peg$parseFrom();\r\n                  if (s7 !== peg$FAILED) {\r\n                    s8 = peg$parse_();\r\n                    if (s8 !== peg$FAILED) {\r\n                      if (input.substr(peg$currPos, 5) === peg$c4) {\r\n                        s9 = peg$c4;\r\n                        peg$currPos += 5;\r\n                      } else {\r\n                        s9 = peg$FAILED;\r\n                        if (peg$silentFails === 0) { peg$fail(peg$c5); }\r\n                      }\r\n                      if (s9 !== peg$FAILED) {\r\n                        s10 = peg$parse_();\r\n                        if (s10 !== peg$FAILED) {\r\n                          s11 = peg$parseWhereExpression();\r\n                          if (s11 !== peg$FAILED) {\r\n                            s12 = peg$parse_();\r\n                            if (s12 !== peg$FAILED) {\r\n                              if (input.substr(peg$currPos, 5) === peg$c6) {\r\n                                s13 = peg$c6;\r\n                                peg$currPos += 5;\r\n                              } else {\r\n                                s13 = peg$FAILED;\r\n                                if (peg$silentFails === 0) { peg$fail(peg$c7); }\r\n                              }\r\n                              if (s13 !== peg$FAILED) {\r\n                                s14 = peg$parse_();\r\n                                if (s14 !== peg$FAILED) {\r\n                                  if (input.substr(peg$currPos, 2) === peg$c8) {\r\n                                    s15 = peg$c8;\r\n                                    peg$currPos += 2;\r\n                                  } else {\r\n                                    s15 = peg$FAILED;\r\n                                    if (peg$silentFails === 0) { peg$fail(peg$c9); }\r\n                                  }\r\n                                  if (s15 !== peg$FAILED) {\r\n                                    s16 = peg$parse_();\r\n                                    if (s16 !== peg$FAILED) {\r\n                                      s17 = peg$parseOrderByExpression();\r\n                                      if (s17 !== peg$FAILED) {\r\n                                        peg$savedPos = s0;\r\n                                        s1 = peg$c10(s3, s7, s11, s17);\r\n                                        s0 = s1;\r\n                                      } else {\r\n                                        peg$currPos = s0;\r\n                                        s0 = peg$FAILED;\r\n                                      }\r\n                                    } else {\r\n                                      peg$currPos = s0;\r\n                                      s0 = peg$FAILED;\r\n                                    }\r\n                                  } else {\r\n                                    peg$currPos = s0;\r\n                                    s0 = peg$FAILED;\r\n                                  }\r\n                                } else {\r\n                                  peg$currPos = s0;\r\n                                  s0 = peg$FAILED;\r\n                                }\r\n                              } else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                              }\r\n                            } else {\r\n                              peg$currPos = s0;\r\n                              s0 = peg$FAILED;\r\n                            }\r\n                          } else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s0;\r\n                          s0 = peg$FAILED;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 6) === peg$c0) {\r\n          s1 = peg$c0;\r\n          peg$currPos += 6;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = peg$parseColumns();\r\n            if (s3 !== peg$FAILED) {\r\n              s4 = peg$parse_();\r\n              if (s4 !== peg$FAILED) {\r\n                if (input.substr(peg$currPos, 4) === peg$c2) {\r\n                  s5 = peg$c2;\r\n                  peg$currPos += 4;\r\n                } else {\r\n                  s5 = peg$FAILED;\r\n                  if (peg$silentFails === 0) { peg$fail(peg$c3); }\r\n                }\r\n                if (s5 !== peg$FAILED) {\r\n                  s6 = peg$parse_();\r\n                  if (s6 !== peg$FAILED) {\r\n                    s7 = peg$parseFrom();\r\n                    if (s7 !== peg$FAILED) {\r\n                      s8 = peg$parse_();\r\n                      if (s8 !== peg$FAILED) {\r\n                        if (input.substr(peg$currPos, 5) === peg$c4) {\r\n                          s9 = peg$c4;\r\n                          peg$currPos += 5;\r\n                        } else {\r\n                          s9 = peg$FAILED;\r\n                          if (peg$silentFails === 0) { peg$fail(peg$c5); }\r\n                        }\r\n                        if (s9 !== peg$FAILED) {\r\n                          s10 = peg$parse_();\r\n                          if (s10 !== peg$FAILED) {\r\n                            s11 = peg$parseWhereExpression();\r\n                            if (s11 !== peg$FAILED) {\r\n                              peg$savedPos = s0;\r\n                              s1 = peg$c11(s3, s7, s11);\r\n                              s0 = s1;\r\n                            } else {\r\n                              peg$currPos = s0;\r\n                              s0 = peg$FAILED;\r\n                            }\r\n                          } else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                          }\r\n                        } else {\r\n                          peg$currPos = s0;\r\n                          s0 = peg$FAILED;\r\n                        }\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          if (input.substr(peg$currPos, 6) === peg$c0) {\r\n            s1 = peg$c0;\r\n            peg$currPos += 6;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n              s3 = peg$parseColumns();\r\n              if (s3 !== peg$FAILED) {\r\n                s4 = peg$parse_();\r\n                if (s4 !== peg$FAILED) {\r\n                  if (input.substr(peg$currPos, 4) === peg$c2) {\r\n                    s5 = peg$c2;\r\n                    peg$currPos += 4;\r\n                  } else {\r\n                    s5 = peg$FAILED;\r\n                    if (peg$silentFails === 0) { peg$fail(peg$c3); }\r\n                  }\r\n                  if (s5 !== peg$FAILED) {\r\n                    s6 = peg$parse_();\r\n                    if (s6 !== peg$FAILED) {\r\n                      s7 = peg$parseFrom();\r\n                      if (s7 !== peg$FAILED) {\r\n                        peg$savedPos = s0;\r\n                        s1 = peg$c12(s3, s7);\r\n                        s0 = s1;\r\n                      } else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                      }\r\n                    } else {\r\n                      peg$currPos = s0;\r\n                      s0 = peg$FAILED;\r\n                    }\r\n                  } else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                  }\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseOrderByExpression() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseOrderByColumn();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = null;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 44) {\r\n            s3 = peg$c13;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseOrderByExpression();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c15(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseOrderByColumn();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c16(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseOrderByColumn() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseColumnName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = peg$parseOrderByDirection();\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c17(s1, s3);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseColumnName();\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseOrderByDirection() {\r\n      var s0;\r\n\r\n      if (input.substr(peg$currPos, 4) === peg$c18) {\r\n        s0 = peg$c18;\r\n        peg$currPos += 4;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c19); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        if (input.substr(peg$currPos, 3) === peg$c20) {\r\n          s0 = peg$c20;\r\n          peg$currPos += 3;\r\n        } else {\r\n          s0 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c21); }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseWhereExpression() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseWhereExpressionColumn();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 3) === peg$c22) {\r\n            s3 = peg$c22;\r\n            peg$currPos += 3;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c23); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseWhereExpression();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c24(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseWhereExpressionColumn();\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 !== peg$FAILED) {\r\n            if (input.substr(peg$currPos, 2) === peg$c25) {\r\n              s3 = peg$c25;\r\n              peg$currPos += 2;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c26); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              s4 = peg$parse_();\r\n              if (s4 !== peg$FAILED) {\r\n                s5 = peg$parseWhereExpression();\r\n                if (s5 !== peg$FAILED) {\r\n                  peg$savedPos = s0;\r\n                  s1 = peg$c27(s1, s5);\r\n                  s0 = s1;\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parseWhereExpressionColumn();\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseWhereExpressionColumn() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseColumnName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = null;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 61) {\r\n            s3 = peg$c28;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c29); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseValue();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c30(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseValue();\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 === peg$FAILED) {\r\n            s2 = null;\r\n          }\r\n          if (s2 !== peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 61) {\r\n              s3 = peg$c28;\r\n              peg$currPos++;\r\n            } else {\r\n              s3 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c29); }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n              s4 = peg$parse_();\r\n              if (s4 === peg$FAILED) {\r\n                s4 = null;\r\n              }\r\n              if (s4 !== peg$FAILED) {\r\n                s5 = peg$parseColumnName();\r\n                if (s5 !== peg$FAILED) {\r\n                  peg$savedPos = s0;\r\n                  s1 = peg$c31(s1, s5);\r\n                  s0 = s1;\r\n                } else {\r\n                  peg$currPos = s0;\r\n                  s0 = peg$FAILED;\r\n                }\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseValue() {\r\n      var s0, s1, s2, s3;\r\n\r\n      s0 = peg$currPos;\r\n      if (input.substr(peg$currPos, 2) === peg$c32) {\r\n        s1 = peg$c32;\r\n        peg$currPos += 2;\r\n      } else {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parseName();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c34) {\r\n            s3 = peg$c34;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c36(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 58) {\r\n          s1 = peg$c37;\r\n          peg$currPos++;\r\n        } else {\r\n          s1 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parseName();\r\n          if (s2 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c39(s2);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseColumns() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      peg$silentFails++;\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseAliasedColumnName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = null;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 44) {\r\n            s3 = peg$c13;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseColumns();\r\n              if (s5 !== peg$FAILED) {\r\n                s1 = [s1, s2, s3, s4, s5];\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$parseAliasedColumnName();\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          if (input.charCodeAt(peg$currPos) === 42) {\r\n            s1 = peg$c41;\r\n            peg$currPos++;\r\n          } else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c42); }\r\n          }\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c43();\r\n          }\r\n          s0 = s1;\r\n        }\r\n      }\r\n      peg$silentFails--;\r\n      if (s0 === peg$FAILED) {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseAliasedColumnName() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseColumnName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c44) {\r\n            s3 = peg$c44;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseName();\r\n              if (s5 !== peg$FAILED) {\r\n                s1 = [s1, s2, s3, s4, s5];\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseColumnName();\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = peg$parseName();\r\n            if (s3 !== peg$FAILED) {\r\n              s1 = [s1, s2, s3];\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$parseColumnName();\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseColumnName() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = null;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 46) {\r\n            s3 = peg$c46;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c47); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseName();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c15(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseName();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c48(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseFrom() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseAliasedName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 === peg$FAILED) {\r\n          s2 = null;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 44) {\r\n            s3 = peg$c13;\r\n            peg$currPos++;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 === peg$FAILED) {\r\n              s4 = null;\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseFrom();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c15(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseAliasedName();\r\n        if (s1 !== peg$FAILED) {\r\n          peg$savedPos = s0;\r\n          s1 = peg$c48(s1);\r\n        }\r\n        s0 = s1;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseAliasedName() {\r\n      var s0, s1, s2, s3, s4, s5;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$parseName();\r\n      if (s1 !== peg$FAILED) {\r\n        s2 = peg$parse_();\r\n        if (s2 !== peg$FAILED) {\r\n          if (input.substr(peg$currPos, 2) === peg$c44) {\r\n            s3 = peg$c44;\r\n            peg$currPos += 2;\r\n          } else {\r\n            s3 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c45); }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            s4 = peg$parse_();\r\n            if (s4 !== peg$FAILED) {\r\n              s5 = peg$parseName();\r\n              if (s5 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c49(s1, s5);\r\n                s0 = s1;\r\n              } else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n              }\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseName();\r\n        if (s1 !== peg$FAILED) {\r\n          s2 = peg$parse_();\r\n          if (s2 !== peg$FAILED) {\r\n            s3 = peg$parseName();\r\n            if (s3 !== peg$FAILED) {\r\n              peg$savedPos = s0;\r\n              s1 = peg$c49(s1, s3);\r\n              s0 = s1;\r\n            } else {\r\n              peg$currPos = s0;\r\n              s0 = peg$FAILED;\r\n            }\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          s0 = peg$currPos;\r\n          s1 = peg$parseName();\r\n          if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c50(s1);\r\n          }\r\n          s0 = s1;\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseKeyword() {\r\n      var s0;\r\n\r\n      if (input.substr(peg$currPos, 5) === peg$c4) {\r\n        s0 = peg$c4;\r\n        peg$currPos += 5;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        if (input.substr(peg$currPos, 4) === peg$c2) {\r\n          s0 = peg$c2;\r\n          peg$currPos += 4;\r\n        } else {\r\n          s0 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseName() {\r\n      var s0, s1, s2, s3, s4;\r\n\r\n      s0 = peg$currPos;\r\n      s1 = peg$currPos;\r\n      peg$silentFails++;\r\n      s2 = peg$parseKeyword();\r\n      peg$silentFails--;\r\n      if (s2 === peg$FAILED) {\r\n        s1 = void 0;\r\n      } else {\r\n        peg$currPos = s1;\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        if (peg$c51.test(input.charAt(peg$currPos))) {\r\n          s2 = input.charAt(peg$currPos);\r\n          peg$currPos++;\r\n        } else {\r\n          s2 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c52); }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n          s3 = [];\r\n          if (peg$c53.test(input.charAt(peg$currPos))) {\r\n            s4 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n          } else {\r\n            s4 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c54); }\r\n          }\r\n          while (s4 !== peg$FAILED) {\r\n            s3.push(s4);\r\n            if (peg$c53.test(input.charAt(peg$currPos))) {\r\n              s4 = input.charAt(peg$currPos);\r\n              peg$currPos++;\r\n            } else {\r\n              s4 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c54); }\r\n            }\r\n          }\r\n          if (s3 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c55(s2, s3);\r\n            s0 = s1;\r\n          } else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n          }\r\n        } else {\r\n          peg$currPos = s0;\r\n          s0 = peg$FAILED;\r\n        }\r\n      } else {\r\n        peg$currPos = s0;\r\n        s0 = peg$FAILED;\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parseWhiteSpace() {\r\n      var s0;\r\n\r\n      if (input.charCodeAt(peg$currPos) === 32) {\r\n        s0 = peg$c56;\r\n        peg$currPos++;\r\n      } else {\r\n        s0 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c57); }\r\n      }\r\n      if (s0 === peg$FAILED) {\r\n        if (input.charCodeAt(peg$currPos) === 10) {\r\n          s0 = peg$c58;\r\n          peg$currPos++;\r\n        } else {\r\n          s0 = peg$FAILED;\r\n          if (peg$silentFails === 0) { peg$fail(peg$c59); }\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n          if (input.charCodeAt(peg$currPos) === 13) {\r\n            s0 = peg$c60;\r\n            peg$currPos++;\r\n          } else {\r\n            s0 = peg$FAILED;\r\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\r\n          }\r\n          if (s0 === peg$FAILED) {\r\n            if (input.charCodeAt(peg$currPos) === 9) {\r\n              s0 = peg$c62;\r\n              peg$currPos++;\r\n            } else {\r\n              s0 = peg$FAILED;\r\n              if (peg$silentFails === 0) { peg$fail(peg$c63); }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    function peg$parse_() {\r\n      var s0, s1, s2;\r\n\r\n      peg$silentFails++;\r\n      s0 = peg$currPos;\r\n      s1 = [];\r\n      s2 = peg$parseWhiteSpace();\r\n      if (s2 !== peg$FAILED) {\r\n        while (s2 !== peg$FAILED) {\r\n          s1.push(s2);\r\n          s2 = peg$parseWhiteSpace();\r\n        }\r\n      } else {\r\n        s1 = peg$FAILED;\r\n      }\r\n      if (s1 !== peg$FAILED) {\r\n        peg$savedPos = s0;\r\n        s1 = peg$c65();\r\n      }\r\n      s0 = s1;\r\n      peg$silentFails--;\r\n      if (s0 === peg$FAILED) {\r\n        s1 = peg$FAILED;\r\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\r\n      }\r\n\r\n      return s0;\r\n    }\r\n\r\n    peg$result = peg$startRuleFunction();\r\n\r\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n      return peg$result;\r\n    } else {\r\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n        peg$fail({ type: \"end\", description: \"end of input\" });\r\n      }\r\n\r\n      throw peg$buildException(\r\n        null,\r\n        peg$maxFailExpected,\r\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\r\n        peg$maxFailPos < input.length\r\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    SyntaxError: peg$SyntaxError,\r\n    parse:       peg$parse\r\n  };\r\n})();\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/polylove-sql-parser/polylove-sql-parser.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = {\n\t\"0\": \"System error\",\n\t\"1\": \"Lovefield library version mismatch.\",\n\t\"2\": \"The database has not initialized yet.\",\n\t\"3\": \"Operation timeout.\",\n\t\"4\": \"Operation blocked.\",\n\t\"5\": \"Storage quota exceeded.\",\n\t\"6\": \"Too many rows: B-Tree implementation supports at most {0} rows.\",\n\t\"7\": \"Service {0} not registered.\",\n\t\"8\": \"Unknown query plan node.\",\n\t\"100\": \"Data error\",\n\t\"101\": \"Table {0} not found.\",\n\t\"102\": \"Data corruption detected.\",\n\t\"103\": \"Row id must be numbers.\",\n\t\"106\": \"Attempt to access {0} outside of specified scope.\",\n\t\"107\": \"Invalid transaction state transition: {0} -> {1}.\",\n\t\"108\": \"Attempt to open a newer database with old code.\",\n\t\"109\": \"Attempt to insert a row number that already existed.\",\n\t\"110\": \"Attempt to import into a non-empty database.\",\n\t\"111\": \"Database name/version mismatch for import.\",\n\t\"112\": \"Import data not found.\",\n\t\"200\": \"Constraint error\",\n\t\"201\": \"Duplicate keys are not allowed.\",\n\t\"202\": \"Attempted to insert NULL value to non-nullable field {0}.\",\n\t\"203\": \"Foreign key constraint violation on constraint {0}.\",\n\t\"300\": \"Not supported\",\n\t\"351\": \"Firebase does not have raw transaction.\",\n\t\"352\": \"IndexedDB is not supported by platform.\",\n\t\"353\": \"WebSQL is not supported by platform.\",\n\t\"354\": \"Unable to open WebSQL database.\",\n\t\"355\": \"WebSQL does not support change notification.\",\n\t\"356\": \"Use WebSQL instance to create transaction instead.\",\n\t\"357\": \"toSql() does not support predicate type: {0}.\",\n\t\"358\": \"toSql() is not implemented for {0}.\",\n\t\"359\": \"LocalStorage is not supported by platform.\",\n\t\"360\": \"Not implemented yet.\",\n\t\"500\": \"Syntax error\",\n\t\"501\": \"Value is not bounded.\",\n\t\"502\": \"Naming rule violation: {0}.\",\n\t\"503\": \"Name {0} is already defined.\",\n\t\"504\": \"Can not use autoIncrement with a non-integer primary key.\",\n\t\"505\": \"Can not use autoIncrement with a cross-column primary key.\",\n\t\"506\": \"Lovefield allows only immediate evaluation of cascading constraints.\",\n\t\"507\": \"Cross-column index {0} refers to nullable columns: {1}.\",\n\t\"508\": \"Table {0} does not have column: {1}.\",\n\t\"509\": \"Attempt to index table {0} on non-indexable column {1}.\",\n\t\"510\": \"Cannot bind to given array: out of range.\",\n\t\"511\": \"IndexedDB tables needs to be acquired from transactions.\",\n\t\"512\": \"WebSQL tables needs to be acquired from transactions.\",\n\t\"513\": \"Unknow query context.\",\n\t\"514\": \"Unknown node type.\",\n\t\"515\": \"from() has already been called.\",\n\t\"516\": \"where() has already been called.\",\n\t\"517\": \"Invalid usage of delete().\",\n\t\"518\": \"Invalid usage of insert().\",\n\t\"519\": \"Attempted to insert or replace in a table with no primary key.\",\n\t\"520\": \"into() has already been called.\",\n\t\"521\": \"values() has already been called.\",\n\t\"522\": \"Invalid usage of select().\",\n\t\"523\": \"Binding parameters of limit/skip without providing values.\",\n\t\"524\": \"Invalid usage of lf.fn.distinct().\",\n\t\"525\": \"Invalid projection list or groupBy columns.\",\n\t\"526\": \"Invalid projection list: mixing aggregated with non-aggregated.\",\n\t\"527\": \"Invalid aggregation detected: {0}\",\n\t\"528\": \"limit() has already been called.\",\n\t\"529\": \"skip() has already been called.\",\n\t\"530\": \"groupBy() has already been called.\",\n\t\"531\": \"Number of rows must not be negative for limit/skip.\",\n\t\"532\": \"Invalid usage of update().\",\n\t\"533\": \"Foreign key loop detected.\",\n\t\"534\": \"Foreign key {0} refers to source column of another foreign key.\",\n\t\"535\": \"Schema is already finalized.\",\n\t\"536\": \"Foreign key {0} refers to invalid table.\",\n\t\"537\": \"Foreign key {0} refers to invalid column.\",\n\t\"538\": \"Foreign key {0} column type mismatch.\",\n\t\"539\": \"Foreign key {0} refers to non-unique column.\",\n\t\"540\": \"Foreign key {0} has invalid reference syntax.\",\n\t\"541\": \"Outer join accepts only join predicate.\",\n\t\"542\": \"from() has to be called before innerJoin() or leftOuterJoin().\",\n\t\"543\": \"Foreign key {0}. A primary key column can't also be a foreign key child column\",\n\t\"544\": \"Duplicate primary key index found at {0}\",\n\t\"545\": \"Primary key column {0} can't be marked as nullable\",\n\t\"546\": \"Indices/constraints/columns can't re-use the table name {0}\",\n\t\"547\": \"where() cannot be called before innerJoin() or leftOuterJoin().\",\n\t\"548\": \"from() has to be called before where().\",\n\t\"549\": \"from() has to be called before orderBy() or groupBy().\",\n\t\"900\": \"Test error\",\n\t\"999\": \"Simulated error\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/json-loader!./~/lovefield/dist/error_code.json\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}